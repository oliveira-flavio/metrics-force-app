// <auto-generated />
using System;
using AppMetricsForce.App.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AppMetricsForce.Migrations
{
    [DbContext(typeof(MetricsDbContext))]
    [Migration("20210922225155_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AppMetricsForce.Models.Meta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("FimMeta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("InicioMeta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("MetaBronze")
                        .HasColumnType("double precision");

                    b.Property<double>("MetaDiamante")
                        .HasColumnType("double precision");

                    b.Property<double>("MetaOuro")
                        .HasColumnType("double precision");

                    b.Property<double>("MetaPrata")
                        .HasColumnType("double precision");

                    b.Property<double>("RealizadoAteDataAtual")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("metas");
                });

            modelBuilder.Entity("AppMetricsForce.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("Cargo")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoFuncionario")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("AppMetricsForce.Models.Administrador", b =>
                {
                    b.HasBaseType("AppMetricsForce.Models.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("AppMetricsForce.Models.Gerente", b =>
                {
                    b.HasBaseType("AppMetricsForce.Models.Usuario");

                    b.HasDiscriminator().HasValue("Gerente");
                });

            modelBuilder.Entity("AppMetricsForce.Models.Vendedor", b =>
                {
                    b.HasBaseType("AppMetricsForce.Models.Usuario");

                    b.HasDiscriminator().HasValue("Vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
